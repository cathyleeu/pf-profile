%center {
  display: flex;
  justify-content: center;
  align-items: center;
}

%border-box {
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
}

%slide-in {
  animation: slide-up 1s ease-out forwards;
}
%slide-out {
  animation: slide-down 1s ease-out forwards;
}

%fade-in {
  opacity: 1 !important;
  transition: opacity 1s;
}

%fade-out {
  opacity: 0;
  transition: opacity 1s;
}

$head-font-size : 7.7vmin;
$normal-font-size : 3.5vmin;
$small-font-size: 2.2vmin;
$head-font : 'Lobster', cursive;
$normal-font: 'Abel', sans-serif;
$inside-el-margin-left : calc((50vw - 40vmin)/2);

$half-size: 50vmin;
$main-el-size: $half-size * 0.8;

.App {
  height: 100vh;

  background-size: auto 100vh;
  object-fit: cover;
  background-image: url(./assets/main-1.jpg);
  
  @extend %center;
}

.edit-component {
  height: 70vh;
  width: 50vw;
  // border: 1px solid black;
  @extend %border-box;
}

.image-cont {
  width: $main-el-size;
  height: $main-el-size;
  margin: $half-size * 0.1;
  margin-left: $inside-el-margin-left;
  border-radius: 100%;

  position: relative;
  @extend %border-box;
  // @extend %center;

  .inner-circle-border {
    top: 0;
    left: 0;
    z-index: 0;
    position: absolute;
    background: linear-gradient(to right, #b861c6 0%,#ffc7c7 100%);
    border-radius: 100%;    
    
    width: $main-el-size;
    height: $main-el-size;
    animation : rotate 3s linear;
    animation-iteration-count: infinite;
    
    .inner-circle {
      position: absolute;
      z-index: 2;
      top: $main-el-size * 0.05;
      left: $main-el-size * 0.05;
      width: $main-el-size * 0.9;
      height: $main-el-size * 0.9;
      background-color: rgba($color: #ffffff, $alpha: 0.8);
      border-radius: 100%;
    }
  }
  .inner-image {
    position: absolute;
    z-index: 2;
    top: $main-el-size * 0.05;
    left: $main-el-size * 0.05;
    width: $main-el-size * 0.9;
    height: $main-el-size * 0.9;
    border-radius: 100%;
    object-fit: cover;
    -webkit-transform: scaleX(1);
    transform: scaleX(1);
    
  }
  .circle-inner-text {
    position: relative;
    z-index: 0;
    top: $main-el-size * 0.5 - ($normal-font-size/2);
    
    text-align: center;
    font-size: $normal-font-size;
    user-select: none;
  }
}
// modal 
// .inner-select {
//   position: absolute;
//   width: $main-el-size;
//   height: $main-el-size;
//   background-color: rgba($color: #ffffff, $alpha: 1);
// }

.title-cont {
  font-size: $head-font-size;
  font-family: $head-font;
  color: rgba($color: #ffffff, $alpha: 0.8);
}

.input-cont {
  width: $main-el-size;
  margin-left: $inside-el-margin-left;
  opacity: 0;
  p {
    font-size: $small-font-size;
    text-align: left;
    color: #ffffff;
  }
  input {
    width: 100%;
    height: $main-el-size*0.18;
    @extend %border-box;
  }

}

.edit-start {
  @extend %slide-in;
  
}
.edit-end {
  @extend %slide-out;
}

.fade-out {
  @extend %fade-out;
}

.fade-in {
  @extend %fade-in; 
}


@mixin transform($property) {
  transform: $property;
    -ms-transform: $property; 
    -webkit-transform: $property; 
}

@keyframes rotate {
  0% {
  }
  100% {
    @include transform(rotate(360deg));
  }
}

@keyframes slide-up {
  from {
    @include transform(translateY(0));
  }
  to {
    @include transform(translateY(-$normal-font-size));
  }
}


@keyframes slide-down {
  from {
    @include transform(translateY(-$normal-font-size));
  }
  to {
    @include transform(translateY(0));
  }
}




/////////////


.modal-cont {
  height: 100vh;
  width: 100vw;
  background-color: rgba($color: #000000, $alpha: 0.4);
  position: absolute;
  z-index: 100;
  
  @extend %center;

  .modal-select-box {
    width: 40vw;
    height: 60vh;
    background-color: #ffffff;
    border-radius: 2%;
    // 생각해보기 ㅈㄴ 구림 
    animation: slide-down 1s ease-in-out forwards;
    padding: 4vh;
    position: relative;
    overflow: hidden;

    
    .select-button {
      height: 10vh;
      width: 100%;
      @extend %center;

      border-bottom: 1px solid rgba($color: #000000, $alpha: 0.2);
      font-size: $normal-font-size;
      color: rgba($color: #000000, $alpha: 0.7);
      cursor: pointer;
      &:last-of-type { 
        border-bottom: none;
      }
    }
    
    .selected-temp {
      width: auto;
      background: #ffffff;
      position: absolute;
      top: 4vh;
      left: 4vh;
      height: calc(100% - 8vh);

      .inner-temp {
        background-color: #ffffff;
        position: absolute;
        top: 0vw;
        width: 40vw;
        left: 50vw;
        height: 100%;
        z-index: 1000;

        .photo-comp-top {
          width: 40vmin;
          height: 40vmin;
          background-color: #000000;
          position: relative;
          margin-left: 50%;
          left: -20vmin;
          overflow: hidden;

          canvas,
          video {
            height: 100%;
            width: auto;
          }
        }

        .photo-comp-btm {

          position: relative;
          height: calc(100% - 40vmin);

          p {
            font-size: $normal-font-size * 0.8;
            position: absolute;
            left: 2vmin;
            top: calc(100% - 10vmin);
            cursor: pointer;
          }

          div {
            width: 10vmin;
            height: 10vmin;
            border-radius: 100%;
            border: 1.4vmin solid gray;
            margin-left: 50%;
            position: absolute;
            left: -5.7vmin;
            top: calc(100% - 15vmin);
            // 중앙절렬 하는 것 고려고려고려
            // margin-top: calc(100% - 20vmin);
            // top: -5.7vmin;
          }
        }

        .lib-readfile.drag-over {
          background-color: rgba($color: rgb(200, 197, 222), $alpha: 1);
        }
        .lib-readfile {
          width: 40vw;
          height: calc(90% - 4vh);
          border: 0.7vmin dashed rgba($color: rgb(200, 197, 222), $alpha: 1);
          border-radius: 1vw;

          @extend %center;
          @extend %border-box;
          flex-direction: column;

          p {
            font-size: $normal-font-size * 1.2;
            color: rgba($color: #000000, $alpha: 0.6);
            width: 100%;
          }

          .file-open-btn {
            height: $small-font-size * 2.2;
            width: 70%;
            border-radius: 1vmin;
            background-color: rgb(92, 135, 216);
            color: white;
            margin: 2vmin;
            cursor: pointer;

            font-size: $small-font-size;
            line-height: $small-font-size * 2.2;

            @extend %border-box;

            &:hover {
              background-color: cornflowerblue;
            }
          }
          
          
        }
        .lib-btm {
          
          .cancle-btn {
            font-size: $normal-font-size * 0.9;
            line-height: $normal-font-size * 0.9;
            cursor: pointer;
            display: inline-block;
            margin: 4vh 2vh;
          }
        }
        
      }
      
      .inner-temp.open {
        animation: isUnfold 0.5s linear forwards;
      }
      
      .inner-temp.close {
        animation: isFold 0.5s linear forwards;
      }
    }
    
  }

}




@keyframes isFold {
  from {
    top: 0vw;
    left: 0vh;
  }
  to {
    top: 0vw;
    left : 50vw;
  }
}

@keyframes isUnfold {
  0% {
    top: 0vw;
    left : 40vw;
  }
  100% {
    top: 0vw;
    left: 0vh;
  }
}







