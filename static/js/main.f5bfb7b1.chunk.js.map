{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["cropNode","InnerCircleText","props","imageUrl","console","log","react_default","a","createElement","className","src","alt","text","InnerCircleEl","innerStatus","default","isHandleEdit","select","isRenderModal","onClick","children","Modal","displayStyle","display","isOpen","style","SelectButton","isHandleClick","purpose","width","height","streaming","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","defaultState","file","imagePreviewUrl","imageSelected","modalVisible","cameraVisible","canvas","takeAfter","takeBefore","e","preventDefault","setState","edit","state","modal","selectType","isHandleInnerStatus","isHandleSelectType","type","concat","handleCloseCamera","video","handleStartCamera","isHandleChange","target","value","defineProperty","name","refs","startbutton","navigator","getMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","audio","stream","mozSrcObject","srcObject","play","err","addEventListener","handleCanPlay","handleTakePicture","getTracks","forEach","track","stop","videoHeight","videoWidth","isNaN","isHandleReadFile","cropDisplay","dropDisplay","libBtm","marginTop","_self","assertThisInitialized","dataset","files","dataTransfer","includes","reader","FileReader","onload","evt","fileUrl","result","renderCropImage","readAsDataURL","isHandleDragEnter","stopPropagation","isHandleDragOver","isHandleDragLeave","isHandleDrop","cropOpts","viewport","url","window","Croppie","lib","isHandleCrop","circle","format","then","toDataURL","destroy","editStatus","true","slide","fadeTitle","fadeInput","innerText","false","selectStatus","camera","library","cameraCancle","libCancle","objectSpread","data","context","getContext","drawImage","_this2","_this$editStatus$this","_this$selectStatus$th","App_Modal","App_SelectButton","ref","accept","data-purpose","onChange","onDragEnter","onDragOver","onDragLeave","onDrop","upload","click","App_InnerCircleEl","App_InnerCircleText","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5bfb7b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport './App.scss';\n\n\nconst InnerCircleText = (props) => {\n  if(props.imageUrl) {\n    console.log(\"I got imageUrl\");\n    return (\n      <img \n        className=\"inner-image\" \n        src={props.imageUrl} \n        alt=\"userImage\"/>\n    )\n  } else {\n    return (\n      <p className=\"circle-inner-text\">\n          {props.text}\n      </p>\n    )\n  }\n}\n\nconst InnerCircleEl = (props) => {\n  let innerStatus = {\n    default : props.isHandleEdit,\n    select : props.isRenderModal,\n  }\n  return (\n    <div className=\"inner-circle-border\">\n      <div \n        className=\"inner-circle\" \n        onClick={innerStatus[props.innerStatus]}\n      >\n        { props.children }\n      </div>\n    </div>\n  )\n  \n}\n\n\nconst Modal = (props) => {\n  // modal open = props.isOpen\n  let displayStyle = {\n    display : props.isOpen ? \"\" : \"none\"\n  }\n  return (\n    <div className=\"modal-cont\" style={displayStyle}>\n      <div className=\"modal-select-box\">\n          {props.children}\n      </div> \n    </div>\n  )\n}\n\nconst SelectButton = (props) => {\n  return (\n    <div \n      className=\"select-button\"\n      onClick={() => props.isHandleClick(props.purpose)}>\n      <p>{ props.text }</p>\n    </div>\n  )\n}\n\n\n// width 와 height 이 왜 있어야핟ㅇ...?\nlet width = 320, height = 0, streaming = false;\nlet cropNode;\nclass App extends Component {\n  defaultState = {\n    file: '',\n    imagePreviewUrl: '',\n    imageSelected: '',\n    modalVisible: false,\n    cameraVisible: false,\n    canvas: 'none',\n    takeAfter: 'none',\n    takeBefore: '',\n  }\n  constructor() {\n    super()\n    this.state = {\n      name : \"\",\n      edit : false,\n      innerStatus : \"default\",\n      modal: false,\n      selectType : \"default\",\n      canvas : \"none\",\n      video: \"\",\n      cropNode: \"\",\n      cropDisplay: \"none\",\n      dropDisplay: \"\"\n    }\n    this.editStatus = {\n      true : {\n        slide : \"edit-start\",\n        fadeTitle : \"fade-out\",\n        fadeInput : \"fade-in\",\n        innerText : \"Click to take a photo\",\n      },\n      false : {\n        slide : \"edit-end\",\n        fadeTitle : \"fade-in\",\n        fadeInput : \"fade-out\",\n        innerText : \"Edit\",\n      }\n    } \n    // Fix \n    this.selectStatus = {\n\n      default : {\n        camera : \"\",\n        library: \"\",\n      },\n      camera : {\n        camera: \"open\",\n        library: \"\"\n      },\n      library : {\n        camera: \"\",\n        library: \"open\"\n      },\n      cameraCancle : {\n        camera: \"close\",\n        library: \"\"\n      },\n      libCancle : {\n        camera: \"\",\n        library: \"close\"\n      }\n    }\n  }\n  componentWillMount(){\n    this.setState({...this.defaultState})\n  }\n  isHandleEdit = (e) => {\n    e.preventDefault();\n    console.log(\"clicked\")\n    this.setState({\n      edit : !this.state.edit,\n      innerStatus : \"select\"\n    })\n  }\n  isRenderModal = () => {\n    console.log(\"rendal modal\");\n    this.setState({\n      modal : !this.state.modal,\n      selectType : \"default\"\n    })\n    \n  }\n  isHandleInnerStatus = (state) => {\n    this.setState({\n      innerStatus : state\n    })\n  }\n  isHandleSelectType = (type) => {\n    this.setState({\n      selectType: type\n    })\n    if(type === \"camera\") {\n      this.handleStartCamera()\n      return;\n    }\n    if(type === \"cameraCancle\") {\n      this.handleCloseCamera(this.state.video)\n      return\n    }\n    \n    console.log(`is selected ${type}`);\n  }\n  isHandleChange = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    this.setState({\n      [e.target.name] : e.target.value\n    })\n  }\n\n  handleStartCamera = () => {\n    console.log(\"handleStartCamera\");\n    \n    let video = this.refs.video, \n        canvas = this.refs.canvas, \n        startbutton = this.refs.startbutton\n\n\n    navigator.getMedia = ( navigator.getUserMedia ||\n                           navigator.webkitGetUserMedia ||\n                           navigator.mozGetUserMedia ||\n                           navigator.msGetUserMedia);\n\n    navigator.getMedia(\n     {\n       video: true,\n       audio: false\n     },\n     function(stream) {\n       if (navigator.mozGetUserMedia) {\n         // moz stream\n         video.mozSrcObject = stream;\n\n       } else {\n\n         // deprecated\n         //  var vendorURL = window.URL || window.webkitURL;\n         //  video.src = vendorURL.createObjectURL(stream);\n        \n         video.srcObject=stream;\n       }\n\n       video.play();\n     },\n     function(err) {\n       console.log(\"An error occured! \" + err);\n     }\n   );\n\n   video.addEventListener('canplay', () => this.handleCanPlay(video), false)\n   startbutton.addEventListener('click', () => this.handleTakePicture(canvas, video) , false);\n    this.setState({\n      video : video\n    })\n  }\n\n  handleTakePicture(canvas, video){\n\n    console.log(\"handleTakePicture\");\n    \n    // let selectbutton = this.refs.selectbutton;\n\n    let context = canvas.getContext('2d'), data;\n\n    if (width && height) {\n      console.log(width, height);\n      \n      canvas.width = width;\n      canvas.height = height;\n      context.drawImage(video, 0, 0, width, height);\n\n      data = canvas.toDataURL('image/png');\n      console.log(data);\n      \n      \n    } else {\n      // this.handleClearPhoto(canvas)\n      console.log(\"handleClear\");\n      \n    }\n    this.setState({\n      imagePreviewUrl: data,\n      canvas: '',\n      takeAfter: '',\n      takeBefore: 'none',\n      modal : false\n    })\n\n    // selectbutton.addEventListener('click', () => this.handleSetImage(data) , false)\n  \n    // camera 종료\n    this.handleCloseCamera(video);\n  }\n  handleCloseCamera = (video) => {\n    video.srcObject.getTracks().forEach(track => track.stop())\n  }\n  handleCanPlay = (video) => {\n    \n    console.log(\"handleCanPlay\");\n    // We will scale the photo width to this\n    \n    if (!streaming) {\n      // 먼저 상태 확인을 하고 width 와 height을 췍\n      height = video.videoHeight / (video.videoWidth/width)\n      /*\n        video.videoHeight = 0\n        video.videoWidth = 0 둘다 영을 가지고,\n        height = 0/(0/320) => NaN 값을 가지게 됨\n      */\n      if (isNaN(height)) {\n        /*\n          때문에 NaN이라면? width = 320 에서 (4/3)을 나눈 값을 height으로 지정\n          그것이 240 값이 나오고 뷰에는 320*240의 video가 나오게 됨\n        */\n        height = width / (4/3)\n      }\n      // let videoEle = ReactDOM.findDOMNode(this.refs.video), \n      //     canvasEle = ReactDOM.findDOMNode(this.refs.canvas);\n\n      // set width, height to video\n      // videoEle.setAttribute('width', width)\n      // videoEle.setAttribute('height', height)\n      // canvasEle.setAttribute('width', width)\n      // canvasEle.setAttribute('height', height)\n      streaming = true;\n    }\n\n  }\n  isHandleReadFile = (e) => {\n    console.log(\"isHandleReadFile\");\n    e.preventDefault();\n\n    this.setState({\n      cropDisplay : \"\",\n      dropDisplay: \"none\"\n    })\n    this.refs.libBtm.style.marginTop = '2vmin';\n    \n    let _self = this;\n    let purpose = e.target.dataset.purpose || 'camera'\n    var files = e.target.files || e.dataTransfer.files;\n    \n    if(!files) {\n      return;\n    }\n    if (files[0].type.includes(\"image\")) {\n      var reader = new FileReader();\n\n      reader.onload = function(evt) {  \n        let fileUrl = evt.target.result;\n\n        _self.setState({\n          imagePreviewUrl : fileUrl\n        }) \n\n        if(purpose === \"library\") {\n          _self.renderCropImage(e, fileUrl)\n        }\n      }\n      reader.readAsDataURL(files[0]);\n\n    }\n\n  }\n  isHandleDragEnter = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  isHandleDragOver = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if(e.target.className === \"lib-readfile\") {\n      e.target.className = \"lib-readfile drag-over\"\n    }\n  }\n  isHandleDragLeave = (e) => {\n    // debugger\n    e.preventDefault();\n    e.stopPropagation();\n    // drag 가 떠났을때 style \n\n    if(e.target.className === \"lib-readfile drag-over\") {\n      e.target.className = \"lib-readfile\"\n    }\n\n  }\n  isHandleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // this.setState({\n    //   cropDisplay : \"\",\n    //   dropDisplay: \"none\"\n    // })\n    \n    this.isHandleReadFile(e)\n    \n  }\n  renderCropImage = (e, fileUrl) => {\n    if(fileUrl) {\n      let cropOpts = {\n        viewport: {\n          width: 180,\n          height: 180,\n          type: 'circle'\n        },\n        url: fileUrl,\n        // enforceBoundary: false\n        // mouseWheelZoom: false\n      }\n      cropNode = new window.Croppie(this.refs.lib, cropOpts);\n    }\n  }\n  isHandleCrop = (e) => {\n    e.preventDefault();\n    let _self = this;\n    cropNode.result({\n      type: 'rawcanvas',\n      circle: true,\n      // size: { width: 300, height: 300 },\n      format: 'png'\n    }).then(function (canvas) {\n      \n      _self.setState({\n        imagePreviewUrl: canvas.toDataURL(),\n        modal : false,\n        cropDisplay : 'none'\n      })\n      cropNode.destroy();\n    })\n\n\n  }\n   render() {\n    let { slide, fadeTitle, innerText } = this.editStatus[this.state.edit];\n    let { camera, library } = this.selectStatus[this.state.selectType];\n    return (\n      <div className=\"App\">\n        <Modal isOpen={this.state.modal}>\n\n          <SelectButton isHandleClick={this.isHandleSelectType} text={'Take a photo'} purpose=\"camera\"/>\n          <SelectButton isHandleClick={this.isHandleSelectType} text={'Choose from library'} purpose=\"library\"/>\n          <SelectButton isHandleClick={this.isRenderModal} text={'Cancle'}/>\n\n          <div className={'selected-temp'}>\n            <div className={`photo-comp ${camera}`}>\n              <div className={'photo-comp-top'}>\n                <video ref=\"video\">Video stream not available.</video>\n                <canvas ref=\"canvas\" className=\"canvas\" style={{display:this.state.canvas}}></canvas>\n              </div>\n              <div className=\"photo-comp-btm\">\n                <p onClick={() => this.isHandleSelectType('cameraCancle')}>Cancle</p>\n                <div ref=\"startbutton\"></div>\n              </div>\n            </div>\n            <div className={`lib-comp ${library}`}>\n              <input \n                ref=\"upload\"\n                type=\"file\"\n                name=\"files[]\"\n                accept=\".jpg, .jpeg, .png\"\n                data-purpose=\"library\"\n                onChange={this.isHandleReadFile}\n                style={{display: 'none'}}\n              />\n              <div \n                className={\"lib-readfile\"}\n                data-purpose=\"library\"\n                // file drop 받는 곳에서 발생하는 이벤트 \n                onDragEnter={this.isHandleDragEnter}\n                onDragOver={this.isHandleDragOver}\n                onDragLeave={this.isHandleDragLeave}\n                onDrop={this.isHandleDrop}\n                >\n                  <p style={{display: `${this.state.dropDisplay}`}}>Drag & Drop</p>\n                  <p \n                    style={{display: `${this.state.dropDisplay}`}}\n                    className=\"file-open-btn\"\n                    onClick={() => this.refs.upload.click()}> Click here to browse </p>\n\n                  <div ref=\"lib\" style={{display: `${this.state.cropDisplay}`}}></div>\n                  \n              </div>\n              <div className=\"lib-btm\" ref=\"libBtm\">\n                <p \n                className=\"cancle-btn\"\n                onClick={() => this.isHandleSelectType('libCancle')}><span>Cancle</span></p>\n                <p \n                  className=\"cancle-btn\"\n                  style={{display: `${this.state.cropDisplay}`}}\n                  onClick={(e) => this.isHandleCrop(e)}>Crop</p>\n              </div>\n              \n            </div>\n          </div>\n\n        </Modal>\n        <div className=\"edit-component\">\n          <p className={`title-cont ${slide} ${fadeTitle}`}>Edit Your Profile</p>\n          <div className={`image-cont ${slide}`}>\n            <InnerCircleEl \n              isHandleEdit={this.isHandleEdit} \n              isRenderModal={this.isRenderModal}\n              innerStatus={this.state.innerStatus} \n            />\n            <InnerCircleText \n              imageUrl={this.state.imagePreviewUrl}\n              text={innerText}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n// <div \n//             className={`input-cont ${slide} ${fadeInput}`}>\n//             <p>name</p>\n//             <input \n//               type=\"text\" \n//               name=\"name\"\n//               placeholder=\"Write Your Name\"\n//               onChange={this.isHandleChange}\n//               value={this.state.name}\n//               />\n//               <button>\n//                 Complete\n//               </button>\n//           </div>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}