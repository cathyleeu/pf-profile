{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["InnerCircleText","props","react_default","a","createElement","className","text","InnerCircleEl","innerStatus","default","isHandleEdit","select","isRenderModal","onClick","children","Modal","displayStyle","display","isOpen","style","SelectButton","isHandleClick","purpose","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","console","log","setState","edit","state","modal","selectType","isHandleInnerStatus","isHandleSelectType","type","concat","isHandleChange","target","value","defineProperty","name","canvas","editStatus","true","slide","fadeTitle","fadeInput","innerText","false","selectStatus","camera","library","cameraCancle","libCancle","_this2","_this$editStatus$this","_this$selectStatus$th","App_Modal","App_SelectButton","ref","App_InnerCircleEl","App_InnerCircleText","placeholder","onChange","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3afa2618.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n\n\nconst InnerCircleText = (props) => {\n  return (\n    <p className=\"circle-inner-text\">\n        {props.text}\n    </p>\n  )\n}\n\nconst InnerCircleEl = (props) => {\n  let innerStatus = {\n    default : props.isHandleEdit,\n    select : props.isRenderModal,\n  }\n  return (\n    <div className=\"inner-circle-border\">\n      <div \n        className=\"inner-circle\" \n        onClick={innerStatus[props.innerStatus]}\n      >\n        { props.children }\n      </div>\n    </div>\n  )\n}\n\n// class InnerCircleEl extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.innerStatus = {\n//       default : {\n//         handleClick : this.props.isHandleEdit\n//       },\n//       select : {\n//         handleClick : this.props.isRenderModal\n//       }\n//     } \n//   }\n//   render() {\n//     let { handleClick } = this.innerStatus[this.props.innerStatus];\n//     return (\n//       <div className=\"inner-circle-border\">\n//         <div className=\"inner-circle\" onClick={handleClick}>\n//           { this.props.children }\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n\n\nconst Modal = (props) => {\n  // modal open = props.isOpen\n  let displayStyle = {\n    display : props.isOpen ? \"\" : \"none\"\n  }\n  return (\n    <div className=\"modal-cont\" style={displayStyle}>\n      <div className=\"modal-select-box\">\n          {props.children}\n      </div> \n    </div>\n  )\n}\n\nconst SelectButton = (props) => {\n  return (\n    <div \n      className=\"select-button\"\n      onClick={() => props.isHandleClick(props.purpose)}>\n      <p>{ props.text }</p>\n    </div>\n  )\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name : \"\",\n      edit : false,\n      innerStatus : \"default\",\n      modal: false,\n      selectType : \"default\",\n      canvas : \"none\"\n    }\n    this.editStatus = {\n      true : {\n        slide : \"edit-start\",\n        fadeTitle : \"fade-out\",\n        fadeInput : \"fade-in\",\n        innerText : \"Click to take a photo\",\n      },\n      false : {\n        slide : \"edit-end\",\n        fadeTitle : \"fade-in\",\n        fadeInput : \"fade-out\",\n        innerText : \"Edit\",\n      }\n    } \n    // Fix \n    this.selectStatus = {\n\n      default : {\n        camera : \"\",\n        library: \"\",\n      },\n      camera : {\n        camera: \"open\",\n        library: \"\"\n      },\n      library : {\n        camera: \"\",\n        library: \"open\"\n      },\n      cameraCancle : {\n        camera: \"close\",\n        library: \"\"\n      },\n      libCancle : {\n        camera: \"\",\n        library: \"close\"\n      }\n    }\n  }\n  isHandleEdit = (e) => {\n    e.preventDefault();\n    console.log(\"clicked\")\n    this.setState({\n      edit : !this.state.edit,\n      innerStatus : \"select\"\n    })\n  }\n  isRenderModal = () => {\n    console.log(\"rendal modal\");\n    this.setState({\n      modal : !this.state.modal,\n      selectType : \"default\"\n    })\n  }\n  isHandleInnerStatus = (state) => {\n    this.setState({\n      innerStatus : state\n    })\n  }\n  isHandleSelectType = (type) => {\n    this.setState({\n      selectType: type\n    })\n    \n    console.log(`is selected ${type}`);\n  }\n  // isRenderCamera = () => {\n    \n  //   console.log(\"isRenderCamera\");\n\n  // }\n  // isRenderFileDrop = () => {\n  //   // select box choose -> file drop -> crop image\n  //   console.log(\"isRenderFileDrop\");\n    \n  // }\n  isHandleChange = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    this.setState({\n      [e.target.name] : e.target.value\n    })\n  }\n\n  // handleStartCamera = () => {\n  //   let video = this.refs.video, canvas = this.refs.canvas, startbutton = this.refs.startbutton\n  //   navigator.getMedia = ( navigator.getUserMedia ||\n  //                          navigator.webkitGetUserMedia ||\n  //                          navigator.mozGetUserMedia ||\n  //                          navigator.msGetUserMedia);\n  //  navigator.getMedia(\n  //    {\n  //      video: true,\n  //      audio: false\n  //    },\n  //    function(stream) {\n  //      if (navigator.mozGetUserMedia) {\n  //        video.mozSrcObject = stream;\n  //      } else {\n  //        var vendorURL = window.URL || window.webkitURL;\n  //        video.src = vendorURL.createObjectURL(stream);\n  //      }\n  //      video.play();\n  //     //  console.log(\"method\",video.play());\n  //    },\n  //    function(err) {\n  //      console.log(\"An error occured! \" + err);\n  //    }\n  //  );\n  //  video.addEventListener('canplay', () => this.handleCanPlay(video), false)\n  //  startbutton.addEventListener('click', () => this.handleTakePicture(canvas, video) , false);\n\n  // }\n\n  render() {\n    let { slide, fadeTitle, fadeInput, innerText } = this.editStatus[this.state.edit];\n    let { camera, library } = this.selectStatus[this.state.selectType];\n    return (\n      <div className=\"App\">\n        <Modal isOpen={this.state.modal}>\n\n          <SelectButton isHandleClick={this.isHandleSelectType} text={'Take a photo'} purpose=\"camera\"/>\n          <SelectButton isHandleClick={this.isHandleSelectType} text={'Choose from library'} purpose=\"library\"/>\n          <SelectButton isHandleClick={this.isRenderModal} text={'Cancle'}/>\n\n          <div className={'selected-temp'}>\n            <div className={`photo-comp ${camera}`}>\n              <div className={'photo-comp-top'}>\n                <video ref=\"video\">Video stream not available.</video>\n                <canvas ref=\"canvas\" className=\"canvas\" style={{display:this.state.canvas}}></canvas>\n              </div>\n              <div className=\"photo-comp-btm\">\n                <p onClick={() => this.isHandleSelectType('cameraCancle')}>Cancle</p>\n                <div \n                  ref=\"takebutton\"\n                  // style={{display: this.state.takeBefore}}\n                >\n                </div>\n              </div>\n            </div>\n            <div className={`lib-comp ${library}`}>\n              <p onClick={() => this.isHandleSelectType('libCancle')}>Cancle</p>\n            </div>\n\n          </div>\n\n        </Modal>\n        <div className=\"edit-component\">\n          <p className={`title-cont ${slide} ${fadeTitle}`}>Edit Your Profile</p>\n          <div className={`image-cont ${slide}`}>\n            <InnerCircleEl \n              isHandleEdit={this.isHandleEdit} \n              isRenderModal={this.isRenderModal}\n              innerStatus={this.state.innerStatus} \n            />\n            <InnerCircleText text={innerText}/>\n          </div>\n          <div \n            className={`input-cont ${slide} ${fadeInput}`}>\n            <p>name</p>\n            <input \n              type=\"text\" \n              name=\"name\"\n              placeholder=\"Write Your Name\"\n              onChange={this.isHandleChange}\n              value={this.state.name}\n              />\n              <button>\n                Complete\n              </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}